[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "git-taz"
version = "0.1.0"
description = "A Git utility package"
readme = "README.md"
requires-python = ">=3.13"
dependencies = ["npyscreen>=1.6.0"]

[project.optional-dependencies]
dev = [
    "black",
    "flake8",
    "mypy",
    "pytest",
    "pytest-cov",   # For coverage reporting
    "safety",       # Security vulnerability scanning
    "bandit[toml]", # Security linting
    "pre-commit",   # Pre-commit hooks
]

[project.scripts]
git-taz = "git_taz.core:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["--strict-markers", "--strict-config", "-v"]

[tool.black]
line-length = 88
target-version = ["py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", ".venv", ".eggs", "*.egg", "dist", "build"]

[tool.bandit]
exclude_dirs = ["tests", ".venv"]
skips = ["B101"]                  # Skip assert_used test
